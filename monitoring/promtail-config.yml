server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/*/*-json.log'
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      - json:
          expressions:
            message: message
          source: log
      - labels:
          stream:
          container:
      - output:
          source: message

  # Application logs
  - job_name: app
    static_configs:
      - targets:
          - localhost
        labels:
          job: app
          __path__: /app/logs/*.log
    pipeline_stages:
      - match:
          selector: '{job="app"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.+)$'
            - labels:
                level:
            - output:
                source: message

  # Nginx logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          __path__: /var/log/nginx/*.log
    pipeline_stages:
      - match:
          selector: '{job="nginx"}'
          stages:
            - regex:
                expression: '(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>\S+ \S+)\] "(?P<request>[^"]*)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)" rt=(?P<request_time>\S+) uct="(?P<upstream_connect_time>\S+)" uht="(?P<upstream_header_time>\S+)" urt="(?P<upstream_response_time>\S+)"'
            - labels:
                method:
                  source: request
                  expression: '^(?P<method>\S+)'
                path:
                  source: request
                  expression: '^\S+ (?P<path>\S+)'
                status:
            - metrics:
                - nginx_http_requests_total:
                    type: Counter
                    description: "Total number of HTTP requests"
                    source: status
                    config:
                      action: inc
                - nginx_http_request_duration_seconds:
                    type: Histogram
                    description: "HTTP request duration"
                    source: request_time
                    config:
                      buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0]
            - output:
                source: message
